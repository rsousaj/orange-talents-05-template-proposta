#
spring.application.name=${NOME_APLICACAO:servico_proposta}
server.port=8081

#DATASOURCE
spring.datasource.url=${PROPOSTA_DATASOURCE_URL:jdbc:mysql://localhost:3306/proposta}
spring.datasource.username=${PROPOSTA_DATASOURCE_USERNAME:root}
spring.datasource.password=${PROPOSTA_DATASOURCE_PASSWORD:password}
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#JPA
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImproveNamingStrategy

#APP EXTERNAL PROPERTIES
proposta.proposta.uri=/api/propostas
proposta.detalhe.uri=/api/propostas/{id}
proposta.cartao.uri=/api/cartoes
proposta.cartao.biometria.uri=/{idCartao}/biometrias
proposta.cartao.bloqueio.uri=/{idCartao}/bloqueios
proposta.cartao.viagem.uri=/{idCartao}/avisos
proposta.cartao.carteira.uri=/{idCartao}/carteiras/{carteira}
proposta.cartao.carteirashabilitadas=${CARTEIRAS_HABILITADAS:PAYPAL,SAMSUNG_PAY}

#OAUTH2
#Caso rodar localmente, deve-se configurar o dominio "keycloak" apontando para localhost.
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://keycloak:8080/auth/realms/cartolandia}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://keycloak:8080/auth/realms/cartolandia/protocol/openid-connect/certs}

#SERVICOS EXTERNOS

## URI DO SERVICO DE ANALISE DE CREDITO
servico.analise=${SERVICO_ANALISE:http://localhost:9999}

## ENDPOINT DA SOLICITACAO DE ANALISE DE CREDITO
servico.analise.solicitacao=${SERVICO_ANALISE_SOLICITACAO:/api/solicitacao}

## ENDPOINT DO HEALTH CHECK
servico.analise.health=${SERVICO_ANALISE:http://localhost:9999}${servico_analise_health_endpoint:/actuator/health}

## URI DO SERVICO DE CONSULTA DE CARTOES
servico.cartoes=${SERVICO_CARTOES:http://localhost:8888/api/cartoes}

## ENDPOINT DA CONSULTA DE CARTAO DE CREDITO
#servico.cartoes.consulta=${SERVICO_CARTOES_CONSULTA:/api/cartoes}

## ENDPOINT DE BLOQUEIO DE CARTAO DE CREDITO
servico.cartoes.bloqueio=${SERVICO_CARTOES_BLOQUEIO:/{id}/bloqueios}

## ENDPOINT DE AVISO DE VIAGEM DE CARTAO DE CREDITO
servico.cartoes.avisos=${SERVICO_CARTOES_BLOQUEIO:/{id}/avisos}

## ENDPOINT DE ASSOCIACAO DE CARTEIRAS
servico.cartoes.carteiras=${SERVICO_CARTOES_CARTEIRA:/{id}/carteiras}

## PERIODICIDADE DA CONSULTA AO SISTEMA DE CARTOES DE CREDITO
servico.cartoes.periodicidade=${SERVICO_CARTOES_PERIODICIDADE:30000}

#OBSERVABILIDADE
management.endpoints.web.exposure.include=${HEALTH_ENDPOINT_EXPOSURE_INCLUDE:health,prometheus}
management.endpoint.health.show-details=ALWAYS
management.metrics.tags.aplicacao=${NOME_APLICACAO:servico de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
opentracing.jaeger.service-name=${spring.application.name}
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

#CRIPTOGRAFIA
database.criptografia.secret=${SECRET:documento}
database.criptografia.salt=${SALT:bdb2e0ff375d16cb}